{"version":3,"file":"src_app_pages_login_login_module_ts.js","mappings":"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","sources":["./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.ts","./src/app/services/auth.service.ts","./src/app/pages/login/login.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n\r\n  email: string;\r\n  pass: string;\r\n\r\n  constructor(private authService: AuthService,private router:Router) { }\r\n\r\n  public async ngOnInit() {\r\n    if (await this.authService.checkUser()) {     \r\n      this.router.navigate(['']);\r\n    }\r\n  }\r\n\r\n  public login() {\r\n    this.authService.SignIn(this.email, this.pass);\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport {\r\n  AngularFirestore,\r\n  AngularFirestoreDocument,\r\n} from '@angular/fire/compat/firestore';\r\nimport { updatePassword, UserCredential, UserInfo } from 'firebase/auth';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../model/authUser';\r\nimport { Usuario } from '../model/Usuario';\r\nimport { UsuariosService } from './usuarios.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  public currentUser: Usuario;\r\n  public userData: firebase.default.auth.UserCredential; // Save logged in user data\r\n\r\n  constructor(\r\n    public afs: AngularFirestore, // Inject Firestore service\r\n    public afAuth: AngularFireAuth, // Inject Firebase auth service\r\n    public router: Router,\r\n    public ngZone: NgZone, // NgZone service to remove outside scope warning\r\n    private usuarioService: UsuariosService\r\n  ) {}\r\n\r\n  public async checkUser() {\r\n    if (JSON.parse(localStorage.getItem('UserCredential'))) {\r\n      await this.setCurrentUser(\r\n        JSON.parse(\r\n          localStorage.getItem('UserCredential')\r\n        ) as firebase.default.auth.UserCredential\r\n      );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public async setCurrentUser(\r\n    usuario: firebase.default.auth.UserCredential\r\n  ): Promise<boolean> {\r\n    let setCurrentUser: boolean = false;\r\n    let usuarios: Usuario[] = await this.usuarioService.getUsuarios();\r\n    usuarios.forEach((element) => {\r\n      if (usuario.user.uid == element.uid) {\r\n        setCurrentUser = true;\r\n        this.currentUser = element;\r\n        this.userData = usuario;\r\n      }\r\n    });\r\n    return setCurrentUser;\r\n  }\r\n\r\n  // Sign in with email/password\r\n  async SignIn(email, password) {\r\n    try {\r\n      const result = await this.afAuth.signInWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n      //comprobar en base de datos y guardar el current user;\r\n      //this.SetUserData(result.user);\r\n      //console.log(this.currentUser);\r\n      localStorage.setItem('UserCredential', JSON.stringify(result));\r\n      if (await this.setCurrentUser(result)) {\r\n        this.ngZone.run(() => {\r\n          this.router.navigate(['']);\r\n        });\r\n      } else {\r\n        window.alert('El Usuario no se encuentra en la base de datos.');\r\n      }\r\n    } catch (error) {\r\n      window.alert(error.message);\r\n    }\r\n  }\r\n  // Sign up with email/password\r\n  async SignUp(email, password) {\r\n    try {\r\n      const result = await this.afAuth.createUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n      /* Call the SendVerificaitonMail() function when new user sign\r\n      up and returns promise */\r\n      //this.SendVerificationMail();\r\n      //this.SetUserData(result.user)\r\n      return result.user.uid;\r\n    } catch (error) {\r\n      window.alert(error.message);\r\n    }\r\n  }\r\n  // Send email verfificaiton when new user sign up\r\n  async SendVerificationMail() {\r\n    return (await this.afAuth.currentUser).sendEmailVerification().then(() => {\r\n      //this.router.navigate(['verify-email-address']);\r\n    });\r\n  }\r\n  // Reset Forggot password\r\n  async ForgotPassword(passwordResetEmail) {\r\n    try {\r\n      await this.afAuth.sendPasswordResetEmail(passwordResetEmail);\r\n      window.alert('Password reset email sent, check your inbox.');\r\n    } catch (error) {\r\n      window.alert(error);\r\n    }\r\n  }\r\n  // Returns true when user is looged in and email is verified\r\n  get isLoggedIn(): boolean {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    return user !== null && user.emailVerified !== false ? true : false;\r\n  }\r\n  /* Setting up user data when sign in with username/password,\r\n  sign up with username/password and sign in with social auth\r\n  provider in Firestore database using AngularFirestore + AngularFirestoreDocument service\r\n  SetUserData(user) {\r\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\r\n    const userData: User = {\r\n      uid: user.uid,\r\n      email: user.email\r\n    }\r\n    return userRef.set(userData, {\r\n      merge: true\r\n    })\r\n  }*/\r\n  // Sign out\r\n  async SignOut() {\r\n    await this.afAuth.signOut();\r\n    localStorage.removeItem('user');\r\n    //this.router.navigate(['sign-in']);\r\n  }\r\n\r\n  public async getCurrentUser() {\r\n    //devolver el usuario actual.\r\n    await this.checkUser();\r\n    if (this.currentUser != null) return this.currentUser;\r\n  }\r\n\r\n  public async updatePass(newPassword: string): Promise<boolean> {\r\n    console.log(this.userData);\r\n    return await this.userData.user\r\n      .updatePassword(newPassword)\r\n      .then(() => {\r\n        return true;\r\n      })\r\n      .catch((error) => {\r\n        // An error ocurred\r\n        console.log(error);\r\n        return false;\r\n      });\r\n  }\r\n}\r\n","export default \"<ion-content padding class=\\\"background\\\">\\r\\n  <ion-card class=\\\"login-html\\\">\\r\\n    <input id=\\\"tab-1\\\" type=\\\"radio\\\" name=\\\"tab\\\" class=\\\"sign-in\\\" checked><label for=\\\"tab-1\\\" class=\\\"tab\\\">Entrar</label>\\r\\n    <input id=\\\"tab-2\\\" type=\\\"radio\\\" name=\\\"tab\\\" class=\\\"sign-up\\\"><label for=\\\"tab-2\\\" class=\\\"tab\\\"></label>\\r\\n    <div class=\\\"login-form\\\">\\r\\n      <div class=\\\"sign-in-htm\\\">\\r\\n        <div class=\\\"group\\\">\\r\\n          <ion-label for=\\\"user\\\" class=\\\"label\\\">Correo</ion-label>\\r\\n          <ion-input id=\\\"user\\\" [(ngModel)]=\\\"email\\\" type=\\\"text\\\" class=\\\"input\\\"></ion-input>\\r\\n        </div>\\r\\n        <div class=\\\"group\\\">\\r\\n          <ion-label for=\\\"pass\\\" class=\\\"label\\\">Contraseña</ion-label>\\r\\n          <ion-input id=\\\"pass\\\" [(ngModel)]=\\\"pass\\\" type=\\\"password\\\" class=\\\"input\\\" data-type=\\\"password\\\"></ion-input>\\r\\n        </div>\\r\\n        <div>\\r\\n          <ion-button (click)=\\\"login()\\\" type=\\\"submit\\\" color=\\\"tertiary\\\" shape=\\\"round\\\" expand=\\\"block\\\">\\r\\n            <ion-icon name=\\\"log-in\\\"></ion-icon>&nbsp;\\r\\n            Iniciar Sesion\\r\\n          </ion-button>\\r\\n        </div>\\r\\n        <div class=\\\"hr\\\"></div>\\r\\n        <div class=\\\"foot-lnk\\\">\\r\\n          <input id=\\\"tab-2\\\" type=\\\"radio\\\" name=\\\"tab\\\" class=\\\"sign-up\\\"><label for=\\\"tab-2\\\" class=\\\"foot-lnk\\\">¿Olvidaste la\\r\\n            contraseña?</label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"sign-up-htm\\\">\\r\\n        <div class=\\\"group\\\">\\r\\n          <label for=\\\"pass\\\" class=\\\"label\\\">Email</label>\\r\\n          <input id=\\\"pass\\\" type=\\\"text\\\" class=\\\"input\\\">\\r\\n        </div>\\r\\n        <div>\\r\\n          <ion-button type=\\\"submit\\\" color=\\\"tertiary\\\" shape=\\\"round\\\" expand=\\\"block\\\">\\r\\n            <ion-icon name=\\\"log-in\\\"></ion-icon>&nbsp;\\r\\n            Iniciar Sesion\\r\\n          </ion-button>\\r\\n        </div>\\r\\n        <div class=\\\"hr\\\"></div>\\r\\n        <div class=\\\"foot-lnk\\\">\\r\\n          <label for=\\\"tab-1\\\">¿Ya estás registrado?</label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ion-card>\\r\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}