{"version":3,"file":"src_app_tab5_tab5_module_ts.js","mappings":"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","sources":["./src/app/services/auth.service.ts","./src/app/tab5/tab5-routing.module.ts","./src/app/tab5/tab5.module.ts","./src/app/tab5/tab5.page.ts","./src/app/tab5/tab5.page.html"],"sourcesContent":["import { Injectable, NgZone } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport {\r\n  AngularFirestore,\r\n  AngularFirestoreDocument,\r\n} from '@angular/fire/compat/firestore';\r\nimport { updatePassword, UserCredential, UserInfo } from 'firebase/auth';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../model/authUser';\r\nimport { Usuario } from '../model/Usuario';\r\nimport { UsuariosService } from './usuarios.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  public currentUser: Usuario;\r\n  public userData: firebase.default.auth.UserCredential; // Save logged in user data\r\n\r\n  constructor(\r\n    public afs: AngularFirestore, // Inject Firestore service\r\n    public afAuth: AngularFireAuth, // Inject Firebase auth service\r\n    public router: Router,\r\n    public ngZone: NgZone, // NgZone service to remove outside scope warning\r\n    private usuarioService: UsuariosService\r\n  ) {}\r\n\r\n  public async checkUser() {\r\n    if (JSON.parse(localStorage.getItem('UserCredential'))) {\r\n      await this.setCurrentUser(\r\n        JSON.parse(\r\n          localStorage.getItem('UserCredential')\r\n        ) as firebase.default.auth.UserCredential\r\n      );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public async setCurrentUser(\r\n    usuario: firebase.default.auth.UserCredential\r\n  ): Promise<boolean> {\r\n    let setCurrentUser: boolean = false;\r\n    let usuarios: Usuario[] = await this.usuarioService.getUsuarios();\r\n    usuarios.forEach((element) => {\r\n      if (usuario.user.uid == element.uid) {\r\n        setCurrentUser = true;\r\n        this.currentUser = element;\r\n        this.userData = usuario;\r\n      }\r\n    });\r\n    return setCurrentUser;\r\n  }\r\n\r\n  // Sign in with email/password\r\n  async SignIn(email, password) {\r\n    try {\r\n      const result = await this.afAuth.signInWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n      //comprobar en base de datos y guardar el current user;\r\n      //this.SetUserData(result.user);\r\n      //console.log(this.currentUser);\r\n      localStorage.setItem('UserCredential', JSON.stringify(result));\r\n      if (await this.setCurrentUser(result)) {\r\n        this.ngZone.run(() => {\r\n          this.router.navigate(['']);\r\n        });\r\n      } else {\r\n        window.alert('El Usuario no se encuentra en la base de datos.');\r\n      }\r\n    } catch (error) {\r\n      window.alert(error.message);\r\n    }\r\n  }\r\n  // Sign up with email/password\r\n  async SignUp(email, password) {\r\n    try {\r\n      const result = await this.afAuth.createUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n      /* Call the SendVerificaitonMail() function when new user sign\r\n      up and returns promise */\r\n      //this.SendVerificationMail();\r\n      //this.SetUserData(result.user)\r\n      return result.user.uid;\r\n    } catch (error) {\r\n      window.alert(error.message);\r\n    }\r\n  }\r\n  // Send email verfificaiton when new user sign up\r\n  async SendVerificationMail() {\r\n    return (await this.afAuth.currentUser).sendEmailVerification().then(() => {\r\n      //this.router.navigate(['verify-email-address']);\r\n    });\r\n  }\r\n  // Reset Forggot password\r\n  async ForgotPassword(passwordResetEmail) {\r\n    try {\r\n      await this.afAuth.sendPasswordResetEmail(passwordResetEmail);\r\n      window.alert('Password reset email sent, check your inbox.');\r\n    } catch (error) {\r\n      window.alert(error);\r\n    }\r\n  }\r\n  // Returns true when user is looged in and email is verified\r\n  get isLoggedIn(): boolean {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    return user !== null && user.emailVerified !== false ? true : false;\r\n  }\r\n  /* Setting up user data when sign in with username/password,\r\n  sign up with username/password and sign in with social auth\r\n  provider in Firestore database using AngularFirestore + AngularFirestoreDocument service\r\n  SetUserData(user) {\r\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\r\n    const userData: User = {\r\n      uid: user.uid,\r\n      email: user.email\r\n    }\r\n    return userRef.set(userData, {\r\n      merge: true\r\n    })\r\n  }*/\r\n  // Sign out\r\n  async SignOut() {\r\n    await this.afAuth.signOut();\r\n    localStorage.removeItem('user');\r\n    //this.router.navigate(['sign-in']);\r\n  }\r\n\r\n  public async getCurrentUser() {\r\n    //devolver el usuario actual.\r\n    await this.checkUser();\r\n    if (this.currentUser != null) return this.currentUser;\r\n  }\r\n\r\n  public async updatePass(newPassword: string): Promise<boolean> {\r\n    console.log(this.userData);\r\n    return await this.userData.user\r\n      .updatePassword(newPassword)\r\n      .then(() => {\r\n        return true;\r\n      })\r\n      .catch((error) => {\r\n        // An error ocurred\r\n        console.log(error);\r\n        return false;\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { Tab5Page } from './tab5.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: Tab5Page\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class Tab5PageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { Tab5PageRoutingModule } from './tab5-routing.module';\r\n\r\nimport { Tab5Page } from './tab5.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    Tab5PageRoutingModule\r\n  ],\r\n  declarations: [Tab5Page]\r\n})\r\nexport class Tab5PageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AlertController, ModalController } from '@ionic/angular';\r\nimport { User } from '../model/authUser';\r\nimport { Usuario } from '../model/Usuario';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { LoadingService } from '../services/loading.service';\r\nimport { ToastService } from '../services/toast.service';\r\nimport { UsuariosService } from '../services/usuarios.service';\r\n\r\n@Component({\r\n  selector: 'app-tab5',\r\n  templateUrl: './tab5.page.html',\r\n  styleUrls: ['./tab5.page.scss'],\r\n})\r\nexport class Tab5Page {\r\n\r\n  public usuario: Usuario;\r\n  private inputName: string;\r\n  private inputDireccion: string;\r\n  private inputPhone: string;\r\n  private inputPass: string;\r\n  private inputNewPass: string;\r\n  private inputConfirmPass: string;\r\n  private email: string;\r\n  private phone: string;\r\n\r\n  constructor(\r\n    private usuarioService: UsuariosService,\r\n    private toast: ToastService,\r\n    public alertController: AlertController,\r\n    public miLoading: LoadingService,\r\n    private modalController: ModalController,\r\n    private authService: AuthService) { }\r\n\r\n  \r\n  async ionViewDidEnter() {\r\n    this.miLoading.showLoading();\r\n    this.usuario = await this.authService.getCurrentUser();\r\n    this.inputName = this.usuario.nombre_comercio;\r\n    this.inputDireccion = this.usuario.direccion;\r\n    this.inputPhone = this.usuario.telefono;\r\n    this.miLoading.hideLoading();\r\n  }\r\n\r\n  public async editDataUsuario() {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: 'Confirmación',\r\n      message: '¿Estás seguro de que quieres actualizar los datos?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          handler: (blah) => {\r\n            this.toast.showToast(\"Operación cancelada\", \"warning\");\r\n          }\r\n        },\r\n        {\r\n          text: 'Actualizar',\r\n          handler: async () => {\r\n            try {\r\n              await this.miLoading.showLoading();\r\n              let usuario: Usuario = await this.authService.getCurrentUser();\r\n              usuario.nombre_comercio = this.inputName;\r\n              usuario.direccion = this.inputDireccion;\r\n              usuario.telefono = this.inputPhone;\r\n              this.usuarioService.putUsuario(usuario).then(updateUsuario => {\r\n                this.toast.showToast(\"¡Usuario actualizado correctamente!\", \"tertiary\");\r\n                this.authService.currentUser = updateUsuario;\r\n                console.log(updateUsuario);\r\n\r\n              }).catch(error => {\r\n                this.toast.showToast(\"¡Fallo al actualizar!\", \"danger\");\r\n              });\r\n              await this.miLoading.hideLoading();\r\n\r\n            } catch (error) {\r\n              console.log(error);\r\n              this.toast.showToast(\"Error al actualizar los datos\", \"danger\");\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  public async updatePassword() {\r\n    if (this.inputNewPass && this.inputConfirmPass) {\r\n      if (this.inputNewPass == this.inputConfirmPass) {\r\n        this.miLoading.showLoading();\r\n        if (await this.authService.updatePass(this.inputNewPass)) {\r\n          this.toast.showToast(\"Contraseña cambiada con éxito\", \"tertiary\");\r\n          this.miLoading.hideLoading();\r\n        }else{\r\n          this.miLoading.hideLoading();\r\n        }\r\n      } else {\r\n        this.toast.showToast(\"Las contraseñas no coinciden\", \"danger\");\r\n      }\r\n    } else {\r\n      this.toast.showToast(\"Tiene que rellenar todos los campos\", \"warning\");\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"<ion-header >\\r\\n  <ion-toolbar color=\\\"warning\\\" class=\\\"header\\\">\\r\\n    <ion-title>EDITAR PERFIL</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <div class=\\\"formsContainer\\\">\\r\\n    <div class=\\\"home\\\">\\r\\n      <ion-label>Nombre</ion-label>\\r\\n      <ion-input placeholder=\\\"Introduce el nombre...\\\" class=\\\"input\\\" [(ngModel)]=\\\"inputName\\\"></ion-input>\\r\\n\\r\\n      <ion-label>Dirección</ion-label>\\r\\n      <ion-input placeholder=\\\"Introduce el correo electrónico...\\\" class=\\\"input\\\" [(ngModel)]=\\\"inputDireccion\\\"></ion-input>\\r\\n\\r\\n      <ion-label>Teléfono</ion-label>\\r\\n      <ion-input placeholder=\\\"Introduce el teléfono...\\\" class=\\\"input\\\" [(ngModel)]=\\\"inputPhone\\\"></ion-input>\\r\\n\\r\\n      <ion-button class=\\\"boton\\\" type=\\\"submit\\\" shape=\\\"round\\\" color=\\\"tertiary\\\" expand=\\\"block\\\" (click)=\\\"editDataUsuario()\\\">ACTUALIZAR</ion-button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"home\\\">\\r\\n      <!-- <ion-label>Contraseña</ion-label> -->\\r\\n      <!-- <ion-input placeholder=\\\"Introduce la contraseña...\\\" class=\\\"input\\\" [(ngModel)]=\\\"inputPass\\\" type=\\\"password\\\"></ion-input> -->\\r\\n\\r\\n      <ion-label>Nueva Contraseña</ion-label>\\r\\n      <ion-input placeholder=\\\"Introduce una nueva contraseña...\\\" class=\\\"group\\\" id=\\\"pass\\\"  data-type=\\\"password\\\" class=\\\"input\\\" [(ngModel)]=\\\"inputNewPass\\\" type=\\\"password\\\"></ion-input>\\r\\n\\r\\n      <ion-label>Confirmar Contraseña</ion-label>\\r\\n      <ion-input placeholder=\\\"Confirmación de contraseña...\\\" class=\\\"group\\\" id=\\\"pass\\\"  data-type=\\\"password\\\" class=\\\"input\\\" [(ngModel)]=\\\"inputConfirmPass\\\" type=\\\"password\\\"></ion-input>\\r\\n\\r\\n      <ion-button class=\\\"boton\\\" type=\\\"submit\\\" shape=\\\"round\\\" (click)=\\\"updatePassword()\\\" color=\\\"tertiary\\\" expand=\\\"block\\\">ACTUALIZAR</ion-button>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\r\\n    <ion-fab-button class=\\\"buttonHelp\\\" (click)=\\\"retroceder()\\\">\\r\\n      <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\r\\n    </ion-fab-button>\\r\\n  </ion-fab> -->\\r\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}